{"name":"Puppet-unit","tagline":"A Groovy library based on JUnit and Groovy SSH DSL for verifying results of Puppet modules.","body":"# puppet-unit \r\n\r\n## Overview\r\n\r\nA **Groovy** library (based on **JUnit** - https://github.com/junit-team/junit, and **Groovy SSH DSL** - \r\nhttps://github.com/aestasit/groovy-ssh-dsl) for creating integration tests of **Puppet** modules.\r\n\r\nThe **puppet-unit** is designed to work with some virtualization or cloud solutions, which allow starting testable \r\nserver instances on-demand. **Aestas/IT** usually uses **puppet-unit** together with **gramazon** (https://github.com/aestasit/gramazon) - \r\na **Groovy** library and **Gradle** plugin for working with **Amazon EC2** instances.  \r\n\r\n## Quick example\r\n\r\nThe following code shows an integration test for simple **JDBC** driver installation module:\r\n\r\n    class JdbcInstallTest extends BasePuppetIntegrationTest {\r\n          \r\n      @Test\r\n      def void verifyMySqlDriverIsDownloaded() {\r\n        \r\n        apply(\"\"\"\r\n          jdbc::install { 'mysql':\r\n            media_library_host => '$mediaLibraryHost' \r\n          }\r\n        \"\"\")\r\n    \r\n        assertTrue directoryExists(\"/opt/jdbc\")\r\n        assertTrue fileExists(\"/opt/jdbc/mysql-connector-5.1.23-generic-noarch.jar\")\r\n        \r\n      }\r\n    \r\n      @Test\r\n      def void verifyDerbyDriverIsDownloaded() {\r\n        \r\n        apply(\"\"\"\r\n          jdbc::install { 'derby':\r\n            media_library_host => '$mediaLibraryHost' \r\n          }\r\n        \"\"\")\r\n    \r\n        assertTrue directoryExists(\"/opt/jdbc\")\r\n        assertTrue fileExists(\"/opt/jdbc/derby-driver-10.9.1.0-generic-noarch.jar\")\r\n        \r\n      }\r\n            \r\n      @BeforeClass\r\n      def static void installTools() {\r\n        command('yum -y -q install tree')\r\n      }\r\n    \r\n      @Before\r\n      def void cleanUp() {\r\n        println \"Removing installation directories:\"\r\n        command('rm -rf /opt/jdbc')\r\n      }\r\n    \r\n      @After\r\n      def void debug() {\r\n        println \"Checking directory content:\"\r\n        command('tree -ad /opt/jdbc')\r\n      }\r\n      \r\n    }\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}